(function() {

  var uid;

  //cache dom
  var $box = $('#mainInfo');

  var $modifyContainer = $box.find('.modifyContainer');
  var $saveContainer = $box.find('.saveContainer');
  var $phone = $box.find('#phone');

  var sessionInfoVerCode; // this is the session info generated by google api to verify phone 

  var currentData = {
    name: '',
    surname: '',
    contact_email: '',
    phone: '',
  };


  //bind events
  $(document).on('load', _loadCard());
  $(document).on('click', '.modifyBtnMain', _changeToModifyMod);
  $(document).on('click', '.saveBtnMain', _saveData);
  $(document).on('click', '.cancBtnMain', _cancelInputs);
  $(document).on('click', '#sendCodeButton', _verifyPhone);


  //init
  async function _loadCard() {
    uid = await dbUserSett.getTheUid();
    $box.find('.inp-text').hide();
    $box.find('input').hide();
    _getData()
      .then(() => {
        _renderTextAndBtn();
        _fillData(currentData);
        _loadVerifyPhone();
      })
  }


  //functions
  function _renderTextAndBtn() {
    _renderModifyButton();
    _renderText();
  }

  function _renderSaveButton() {
    var btn = `<button class="def-btn saveBtnMain"">Salva</button>
                 <span class="cancel-btn cancBtnMain">cancella</span>`;
    $saveContainer.html(btn);
    $modifyContainer.html('');
  }

  function _renderModifyButton() {
    var btn = `<div class="edit-pen modifyBtnMain">Modifica</div>`;
    $modifyContainer.html(btn);
    $saveContainer.html('');
  }


  function _changeToModifyMod() {
    _renderSaveButton();
    _renderInputs();
  }

  function _changeToTextMode() {
    _renderModifyButton();
    _renderText();
  }


  //hide text show input
  function _renderInputs() {
    $box.find('.inp-text').hide();
    $box.find('input').not('#smsCode').show();
    $box.find('.verify-phone-box').show();
    $box.find('.opt').show();
  }

  //hide input show text
  function _renderText() {
    $box.find('.inp-text').show();
    $box.find('input').not('#smsCode').hide();
    $box.find('.verify-phone-box').hide();
    $box.find('.opt').hide();
  }

  function _getData() {
    return new Promise((resolve) => {
      dbUserSett.getUserProfileData(uid).then((data) => {
        if (data) {
          currentData = data.profile;
        }
        resolve();
      });
    })
  }

  function _fillData(obj) {
    _fillInput('#name', obj.name);
    _fillInput('#surname', obj.surname);
    _fillInput('#email', obj.contact_email);
    _fillInput('#phone', obj.phone);
  }

  /**
   * fill the given input and text with value
   * @param {string} domId - id of element -> '#el' 
   * @param {*} val - value
   */
  function _fillInput(domId, val) {
    var $nameInp = $box.find(domId);
    var $nameTxt = $box.find(domId).parent().children('.inp-text');
    if (val == '' || val == null) {
      $nameTxt.html('-')
    } else {
      $nameTxt.html(val);
    }
    $nameInp.val(val);
  }

  function _cancelInputs() {
    _changeToTextMode();
    _fillData(currentData);
  }

  async function _saveData() {
    var obj = {
        name: $box.find('#name').val(),
        surname: $box.find('#surname').val(),
        contact_email: $box.find('#email').val(),
        phone: $box.find('#phone').val(),
      }
      //compare if data is the same
    if (JSON.stringify(obj) === JSON.stringify(currentData)) {
      _changeToTextMode();
      return;
    } else {
      _loadingButtonOn();
      await dbUserSett.saveUserMainInfo(uid, obj);
      currentData = obj;
      _fillData(obj);
      _changeToTextMode();
      _loadingButtonOff();
      return;
    }
  }

  function _loadingButtonOn() {
    var $btn = $box.find('.saveBtnMain');
    $btn.attr('disabled', true).css('opacity', .5).css("pointer-events", "none");
    $btn.html('Salva...');
  }

  function _loadingButtonOff() {
    var $btn = $box.find('.saveBtnMain');
    $btn.attr('disabled', false).css('opacity', 1).css("pointer-events", "auto");
    $btn.html('Salva');
  }


  async function _loadVerifyPhone() {

    var verified = await dbUserSett.checkIfPhoneIsVerified(uid);
    if (verified == 1) {
      _setVerifiedPhone();
      return;
    }

    var verifyButton = `
      <div class="verify-phone-box">
        <a class="verify-phone-label" id="sendCodeButton">Verifica</a>
        <button style="display: none;" id="sendCode">reChaptcha</button>
      </div>
      `;
    $(verifyButton).insertAfter($box.find('#phone')).hide();

    // set-up an recaptcha. On CLICK sendCode (triggered)
    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sendCode', {
      'size': 'invisible',
      'callback': recapchaToken => {

        var googleApiUrl = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/sendVerificationCode?key=AIzaSyD1D0cv0StEp477eLCvwoSQlT1a4-ZtULA'
        var data = {
          "phoneNumber": '+39' + $phone.val(),
          "recaptchaToken": recapchaToken
        }

        //GET SESSION INFO TOKEN AND SEND CODE TO PHONE
        fetchVerification(googleApiUrl, data)
          .then(data => {
            console.log('Getting sessionInfo and sending sms: ' + data);
            if (data.sessionInfo == undefined) {
              var errorNumber = `
                <div class="loc-err numberVerErr">Troppi tentativi. Riprova pi√π tardi.</div>
              `;
              $(errorNumber).insertAfter($box.find('#sendCodeButton')).show();
              setTimeout(() => {
                $box.find('.numberVerErr').remove();
              }, 4000);
              $box.find('.verify-phone-label').attr('disabled', false).css('opacity', 0.5).css("pointer-events", "none");
            } else {
              sessionInfoVerCode = data.sessionInfo;
              _showVerifyCode();
            }
          });

      },
      'expired-callback': response => {
        // Response expired. Ask user to solve reCAPTCHA again.
        $('.verify-code').remove();
        var errorNumber = `
          <div class="loc-err numberVerErr">Codice scaduto. Riprova</div>
        `;
        $(errorNumber).insertAfter($box.find('#sendCodeButton')).show();
        setTimeout(() => {
          $box.find('.numberVerErr').remove();
        }, 4000);
        $box.find('#phone').attr('disabled', false).css('opacity', 1).css("pointer-events", "auto");
        $box.find('.verify-phone-label').attr('disabled', false).css('opacity', 1).css("pointer-events", "auto");

        console.log('Recaptcha Expired. Please try again.');
      }
    });

    // render the rapchaVerifier. 
    window.recaptchaVerifier.render().then(function(widgetId) {
      window.recaptchaWidgetId = widgetId;
    });
  }

  function _verifyPhone() {
    $box.find('.numberVerErr').remove();
    var phone = $box.find('#phone').val();
    if (validatePhoneNumber(phone)) {
      console.log('valid phone');
      //get token and code (in function _loadVerifyPhone)
      $box.find('#sendCode').trigger('click');
    } else {
      console.log('not valid phone');
      var errorNumber = `
      <div class="loc-err numberVerErr">Numero non valido</div>
      `;
      $(errorNumber).insertAfter($box.find('#sendCodeButton')).show();
      setTimeout(() => {
        $box.find('.numberVerErr').remove();
      }, 4000);
    }
  }

  function validatePhoneNumber(input_str) {
    var re = /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im;
    return re.test(input_str);
  }

  async function fetchVerification(url = '', data = {}) {
    // Default options are marked with *
    const response = await fetch(url, {
      method: 'POST', // *GET, POST, PUT, DELETE, etc.
      mode: 'cors', // no-cors, *cors, same-origin
      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
      credentials: 'same-origin', // include, *same-origin, omit
      headers: {
        'Content-Type': 'application/json'
          // 'Content-Type': 'application/x-www-form-urlencoded',
      },
      redirect: 'follow', // manual, *follow, error
      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
      body: JSON.stringify(data) // body data type must match "Content-Type" header
    });
    return response.json(); // parses JSON response into native JavaScript objects
  }

  function _showVerifyCode() {
    //block verify number button and input
    $box.find('#phone').attr('disabled', true).css('opacity', .5).css("pointer-events", "none");
    $box.find('.verify-phone-label').attr('disabled', true).css('opacity', .5).css("pointer-events", "none");

    //append
    var verCode = `
      <div class="verify-code">
        <label>Inserisci qui sotto il codice inviato via sms al tuo telefono</label>
        <div class="verify-code-box">
          <input type="text" id="smsCode" placeholder="Codice 6 cifre" />
          <a class="verify-phone-label" id="submitCode" disabled>Invia</a>
        </div>
      </div>
    `;

    $(verCode).insertAfter($box.find('.verify-phone-box'));
    $('#submitCode').attr('disabled', true).css('opacity', .8).css("pointer-events", "none");

  }

  $(document).on('click', '#submitCode', () => _checkCode());

  $(document).on('keyup', '#smsCode', () => {
    if ($('#smsCode').val().length > 5) {
      $('#submitCode').attr('disabled', false).css('opacity', 1).css("pointer-events", "auto");
    } else {
      $('#submitCode').attr('disabled', true).css('opacity', .8).css("pointer-events", "none");
    }
  });


  function _checkCode() {
    var googleApiUrl = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPhoneNumber?key=AIzaSyD1D0cv0StEp477eLCvwoSQlT1a4-ZtULA'
    var data = {
      "sessionInfo": sessionInfoVerCode,
      "code": $('#smsCode').val()
    }

    //check code
    fetchVerification(googleApiUrl, data)
      .then(data => {
        console.log('Checking code: ' + data)
        if (data.error !== undefined) {
          var errorNumber = `
              <div class="loc-err numberVerErr">Codice sbagliato. Riprova</div>
            `;
          $(errorNumber).insertAfter($box.find('#sendCodeButton')).show();
          setTimeout(() => {
            $box.find('.numberVerErr').remove();
          }, 4000);
        } else {
          //VERIFIED
          dbUserSett.setVerifiedPhone(uid);
          $('.verify-code').remove();
          $('button.saveBtnMain').trigger('click');
          _setVerifiedPhone();
        }


      });
  }

  function _setVerifiedPhone() {
    $('#sendCodeButton').remove();
    var verifiedIcon = `<img src="images/tick-symbol.svg" class="verifiedBadge" title="Verificato"/>`;
    $box.find('.input-with-label .opt').remove();
    $(verifiedIcon).insertAfter($box.find('#phone').parent().find('label'));
    $box.find('#phone').attr('disabled', true);
  }


})();